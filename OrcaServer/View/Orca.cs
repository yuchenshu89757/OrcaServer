// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: orca.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbr = global::Google.Protobuf.Reflection;
namespace Com.Xiaoman {

  /// <summary>Holder for reflection information generated from orca.proto</summary>
  public static partial class OrcaReflection {

    #region Descriptor
    /// <summary>File descriptor for orca.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OrcaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpvcmNhLnByb3RvEgtjb20ueGlhb21hbiKTAQoHT3JjYUFkdhIOCgZhZHZf",
            "aWQYASABKA0SFQoNY3JlYXRpb25fdGltZRgCIAEoDRIXCg9leHBpcmF0aW9u",
            "X3RpbWUYAyABKA0SGgoSd2FsbF9wYXBlcl8xNl90b185GAQgASgMEhkKEXdh",
            "bGxfcGFwZXJfNF90b18zGAUgASgMEhEKCWRpdl9wYXBlchgGIAEoDCJ0CgxP",
            "cmNhUHJpbnRMb2cSDwoHcGxvZ19pZBgBIAEoDRIQCghkaXNwdGltZRgCIAEo",
            "DRIPCgdwY19uYW1lGAMgASgJEhAKCG1hY19hZGRyGAQgASgJEg8KB2lwX2Fk",
            "ZHIYBSABKAkSDQoFYWRfaWQYBiABKAQiYgoLT3JjYVNob3dMb2cSDwoHc2xv",
            "Z19pZBgBIAEoDRIQCghkaXNwdGltZRgCIAEoDRIQCghtYWNfYWRkchgDIAEo",
            "CRINCgVhZF9pZBgEIAEoBBIPCgdwaWN0dXJlGAUgASgMIpgCCg9RdWVyeUFk",
            "dlJlcXVlc3QSNAoEdHlwZRgBIAEoDjImLmNvbS54aWFvbWFuLlF1ZXJ5QWR2",
            "UmVxdWVzdC5RdWVyeVR5cGUSEAoIbWFjX2FkZHIYAiABKAkSOwoKcmVzb2x1",
            "dGlvbhgDIAEoDjInLmNvbS54aWFvbWFuLlF1ZXJ5QWR2UmVxdWVzdC5SZXNv",
            "bHV0aW9uEhUKDWNyZWF0aW9uX3RpbWUYBCABKA0iOgoJUXVlcnlUeXBlEhUK",
            "EVFVRVJZX1RZUEVfU0lNUExFEAASFgoSUVVFUllfVFlQRV9DT01QTEVYEAEi",
            "LQoKUmVzb2x1dGlvbhIOCgpSRVNfNF9UT18zEAASDwoLUkVTXzE2X1RPXzkQ",
            "ASLDAQoQVXBkYXRlQWR2UmVxdWVzdBI2CgR0eXBlGAEgASgOMiguY29tLnhp",
            "YW9tYW4uVXBkYXRlQWR2UmVxdWVzdC5VcGRhdGVUeXBlEiEKA2FkdhgCIAEo",
            "CzIULmNvbS54aWFvbWFuLk9yY2FBZHYiVAoKVXBkYXRlVHlwZRIWChJVUERB",
            "VEVfVFlQRV9DUkVBVEUQABIWChJVUERBVEVfVFlQRV9VUERBVEUQARIWChJV",
            "UERBVEVfVFlQRV9ERUxFVEUQAiJAChBJbnNlcnRMb2dSZXF1ZXN0EiwKCXBy",
            "aW50X2xvZxgBIAEoCzIZLmNvbS54aWFvbWFuLk9yY2FQcmludExvZyJEChZJ",
            "bnNlcnRTY3JlZW5ob3RSZXF1ZXN0EioKCHNob3dfbG9nGAEgASgLMhguY29t",
            "LnhpYW9tYW4uT3JjYVNob3dMb2ciNQoQUXVlcnlBZHZSZXNwb25zZRIhCgNh",
            "ZHYYASABKAsyFC5jb20ueGlhb21hbi5PcmNhQWR2IigKEVVwZGF0ZUFkdlJl",
            "c3BvbnNlEhMKC3VwZGF0ZV9zdWNjGAEgASgIIigKEUluc2VydExvZ1Jlc3Bv",
            "bnNlEhMKC2luc2VydF9zdWNjGAEgASgIIi8KGEluc2VydFNjcmVlbnNob3RS",
            "ZXNwb25zZRITCgtpbnNlcnRfc3VjYxgBIAEoCDLQAgoEZ1JQQxJLCghRdWVy",
            "eUFkdhIcLmNvbS54aWFvbWFuLlF1ZXJ5QWR2UmVxdWVzdBodLmNvbS54aWFv",
            "bWFuLlF1ZXJ5QWR2UmVzcG9uc2UiADABEkwKCVVwZGF0ZUFkdhIdLmNvbS54",
            "aWFvbWFuLlVwZGF0ZUFkdlJlcXVlc3QaHi5jb20ueGlhb21hbi5VcGRhdGVB",
            "ZHZSZXNwb25zZSIAEkwKCUluc2VydExvZxIdLmNvbS54aWFvbWFuLkluc2Vy",
            "dExvZ1JlcXVlc3QaHi5jb20ueGlhb21hbi5JbnNlcnRMb2dSZXNwb25zZSIA",
            "El8KD0luc2VydFNjcmVlbmhvdBIjLmNvbS54aWFvbWFuLkluc2VydFNjcmVl",
            "bmhvdFJlcXVlc3QaJS5jb20ueGlhb21hbi5JbnNlcnRTY3JlZW5zaG90UmVz",
            "cG9uc2UiAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Xiaoman.OrcaAdv), global::Com.Xiaoman.OrcaAdv.Parser, new[]{ "AdvId", "CreationTime", "ExpirationTime", "WallPaper16To9", "WallPaper4To3", "DivPaper" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Xiaoman.OrcaPrintLog), global::Com.Xiaoman.OrcaPrintLog.Parser, new[]{ "PlogId", "Disptime", "PcName", "MacAddr", "IpAddr", "AdId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Xiaoman.OrcaShowLog), global::Com.Xiaoman.OrcaShowLog.Parser, new[]{ "SlogId", "Disptime", "MacAddr", "AdId", "Picture" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Xiaoman.QueryAdvRequest), global::Com.Xiaoman.QueryAdvRequest.Parser, new[]{ "Type", "MacAddr", "Resolution", "CreationTime" }, null, new[]{ typeof(global::Com.Xiaoman.QueryAdvRequest.Types.QueryType), typeof(global::Com.Xiaoman.QueryAdvRequest.Types.Resolution) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Xiaoman.UpdateAdvRequest), global::Com.Xiaoman.UpdateAdvRequest.Parser, new[]{ "Type", "Adv" }, null, new[]{ typeof(global::Com.Xiaoman.UpdateAdvRequest.Types.UpdateType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Xiaoman.InsertLogRequest), global::Com.Xiaoman.InsertLogRequest.Parser, new[]{ "PrintLog" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Xiaoman.InsertScreenhotRequest), global::Com.Xiaoman.InsertScreenhotRequest.Parser, new[]{ "ShowLog" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Xiaoman.QueryAdvResponse), global::Com.Xiaoman.QueryAdvResponse.Parser, new[]{ "Adv" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Xiaoman.UpdateAdvResponse), global::Com.Xiaoman.UpdateAdvResponse.Parser, new[]{ "UpdateSucc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Xiaoman.InsertLogResponse), global::Com.Xiaoman.InsertLogResponse.Parser, new[]{ "InsertSucc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Xiaoman.InsertScreenshotResponse), global::Com.Xiaoman.InsertScreenshotResponse.Parser, new[]{ "InsertSucc" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class OrcaAdv : pb::IMessage<OrcaAdv> {
    private static readonly pb::MessageParser<OrcaAdv> _parser = new pb::MessageParser<OrcaAdv>(() => new OrcaAdv());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrcaAdv> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Xiaoman.OrcaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrcaAdv() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrcaAdv(OrcaAdv other) : this() {
      advId_ = other.advId_;
      creationTime_ = other.creationTime_;
      expirationTime_ = other.expirationTime_;
      wallPaper16To9_ = other.wallPaper16To9_;
      wallPaper4To3_ = other.wallPaper4To3_;
      divPaper_ = other.divPaper_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrcaAdv Clone() {
      return new OrcaAdv(this);
    }

    /// <summary>Field number for the "adv_id" field.</summary>
    public const int AdvIdFieldNumber = 1;
    private uint advId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint AdvId {
      get { return advId_; }
      set {
        advId_ = value;
      }
    }

    /// <summary>Field number for the "creation_time" field.</summary>
    public const int CreationTimeFieldNumber = 2;
    private uint creationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CreationTime {
      get { return creationTime_; }
      set {
        creationTime_ = value;
      }
    }

    /// <summary>Field number for the "expiration_time" field.</summary>
    public const int ExpirationTimeFieldNumber = 3;
    private uint expirationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ExpirationTime {
      get { return expirationTime_; }
      set {
        expirationTime_ = value;
      }
    }

    /// <summary>Field number for the "wall_paper_16_to_9" field.</summary>
    public const int WallPaper16To9FieldNumber = 4;
    private pb::ByteString wallPaper16To9_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString WallPaper16To9 {
      get { return wallPaper16To9_; }
      set {
        wallPaper16To9_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "wall_paper_4_to_3" field.</summary>
    public const int WallPaper4To3FieldNumber = 5;
    private pb::ByteString wallPaper4To3_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString WallPaper4To3 {
      get { return wallPaper4To3_; }
      set {
        wallPaper4To3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "div_paper" field.</summary>
    public const int DivPaperFieldNumber = 6;
    private pb::ByteString divPaper_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DivPaper {
      get { return divPaper_; }
      set {
        divPaper_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrcaAdv);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrcaAdv other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AdvId != other.AdvId) return false;
      if (CreationTime != other.CreationTime) return false;
      if (ExpirationTime != other.ExpirationTime) return false;
      if (WallPaper16To9 != other.WallPaper16To9) return false;
      if (WallPaper4To3 != other.WallPaper4To3) return false;
      if (DivPaper != other.DivPaper) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AdvId != 0) hash ^= AdvId.GetHashCode();
      if (CreationTime != 0) hash ^= CreationTime.GetHashCode();
      if (ExpirationTime != 0) hash ^= ExpirationTime.GetHashCode();
      if (WallPaper16To9.Length != 0) hash ^= WallPaper16To9.GetHashCode();
      if (WallPaper4To3.Length != 0) hash ^= WallPaper4To3.GetHashCode();
      if (DivPaper.Length != 0) hash ^= DivPaper.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AdvId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(AdvId);
      }
      if (CreationTime != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(CreationTime);
      }
      if (ExpirationTime != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(ExpirationTime);
      }
      if (WallPaper16To9.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(WallPaper16To9);
      }
      if (WallPaper4To3.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(WallPaper4To3);
      }
      if (DivPaper.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(DivPaper);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AdvId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(AdvId);
      }
      if (CreationTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreationTime);
      }
      if (ExpirationTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ExpirationTime);
      }
      if (WallPaper16To9.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(WallPaper16To9);
      }
      if (WallPaper4To3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(WallPaper4To3);
      }
      if (DivPaper.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DivPaper);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrcaAdv other) {
      if (other == null) {
        return;
      }
      if (other.AdvId != 0) {
        AdvId = other.AdvId;
      }
      if (other.CreationTime != 0) {
        CreationTime = other.CreationTime;
      }
      if (other.ExpirationTime != 0) {
        ExpirationTime = other.ExpirationTime;
      }
      if (other.WallPaper16To9.Length != 0) {
        WallPaper16To9 = other.WallPaper16To9;
      }
      if (other.WallPaper4To3.Length != 0) {
        WallPaper4To3 = other.WallPaper4To3;
      }
      if (other.DivPaper.Length != 0) {
        DivPaper = other.DivPaper;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AdvId = input.ReadUInt32();
            break;
          }
          case 16: {
            CreationTime = input.ReadUInt32();
            break;
          }
          case 24: {
            ExpirationTime = input.ReadUInt32();
            break;
          }
          case 34: {
            WallPaper16To9 = input.ReadBytes();
            break;
          }
          case 42: {
            WallPaper4To3 = input.ReadBytes();
            break;
          }
          case 50: {
            DivPaper = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrcaPrintLog : pb::IMessage<OrcaPrintLog> {
    private static readonly pb::MessageParser<OrcaPrintLog> _parser = new pb::MessageParser<OrcaPrintLog>(() => new OrcaPrintLog());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrcaPrintLog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Xiaoman.OrcaReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrcaPrintLog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrcaPrintLog(OrcaPrintLog other) : this() {
      plogId_ = other.plogId_;
      disptime_ = other.disptime_;
      pcName_ = other.pcName_;
      macAddr_ = other.macAddr_;
      ipAddr_ = other.ipAddr_;
      adId_ = other.adId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrcaPrintLog Clone() {
      return new OrcaPrintLog(this);
    }

    /// <summary>Field number for the "plog_id" field.</summary>
    public const int PlogIdFieldNumber = 1;
    private uint plogId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PlogId {
      get { return plogId_; }
      set {
        plogId_ = value;
      }
    }

    /// <summary>Field number for the "disptime" field.</summary>
    public const int DisptimeFieldNumber = 2;
    private uint disptime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Disptime {
      get { return disptime_; }
      set {
        disptime_ = value;
      }
    }

    /// <summary>Field number for the "pc_name" field.</summary>
    public const int PcNameFieldNumber = 3;
    private string pcName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PcName {
      get { return pcName_; }
      set {
        pcName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mac_addr" field.</summary>
    public const int MacAddrFieldNumber = 4;
    private string macAddr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MacAddr {
      get { return macAddr_; }
      set {
        macAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ip_addr" field.</summary>
    public const int IpAddrFieldNumber = 5;
    private string ipAddr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IpAddr {
      get { return ipAddr_; }
      set {
        ipAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ad_id" field.</summary>
    public const int AdIdFieldNumber = 6;
    private ulong adId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AdId {
      get { return adId_; }
      set {
        adId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrcaPrintLog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrcaPrintLog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlogId != other.PlogId) return false;
      if (Disptime != other.Disptime) return false;
      if (PcName != other.PcName) return false;
      if (MacAddr != other.MacAddr) return false;
      if (IpAddr != other.IpAddr) return false;
      if (AdId != other.AdId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlogId != 0) hash ^= PlogId.GetHashCode();
      if (Disptime != 0) hash ^= Disptime.GetHashCode();
      if (PcName.Length != 0) hash ^= PcName.GetHashCode();
      if (MacAddr.Length != 0) hash ^= MacAddr.GetHashCode();
      if (IpAddr.Length != 0) hash ^= IpAddr.GetHashCode();
      if (AdId != 0UL) hash ^= AdId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlogId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(PlogId);
      }
      if (Disptime != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Disptime);
      }
      if (PcName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PcName);
      }
      if (MacAddr.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MacAddr);
      }
      if (IpAddr.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(IpAddr);
      }
      if (AdId != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(AdId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlogId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PlogId);
      }
      if (Disptime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Disptime);
      }
      if (PcName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PcName);
      }
      if (MacAddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MacAddr);
      }
      if (IpAddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IpAddr);
      }
      if (AdId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AdId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrcaPrintLog other) {
      if (other == null) {
        return;
      }
      if (other.PlogId != 0) {
        PlogId = other.PlogId;
      }
      if (other.Disptime != 0) {
        Disptime = other.Disptime;
      }
      if (other.PcName.Length != 0) {
        PcName = other.PcName;
      }
      if (other.MacAddr.Length != 0) {
        MacAddr = other.MacAddr;
      }
      if (other.IpAddr.Length != 0) {
        IpAddr = other.IpAddr;
      }
      if (other.AdId != 0UL) {
        AdId = other.AdId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlogId = input.ReadUInt32();
            break;
          }
          case 16: {
            Disptime = input.ReadUInt32();
            break;
          }
          case 26: {
            PcName = input.ReadString();
            break;
          }
          case 34: {
            MacAddr = input.ReadString();
            break;
          }
          case 42: {
            IpAddr = input.ReadString();
            break;
          }
          case 48: {
            AdId = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OrcaShowLog : pb::IMessage<OrcaShowLog> {
    private static readonly pb::MessageParser<OrcaShowLog> _parser = new pb::MessageParser<OrcaShowLog>(() => new OrcaShowLog());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OrcaShowLog> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Xiaoman.OrcaReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrcaShowLog() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrcaShowLog(OrcaShowLog other) : this() {
      slogId_ = other.slogId_;
      disptime_ = other.disptime_;
      macAddr_ = other.macAddr_;
      adId_ = other.adId_;
      picture_ = other.picture_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OrcaShowLog Clone() {
      return new OrcaShowLog(this);
    }

    /// <summary>Field number for the "slog_id" field.</summary>
    public const int SlogIdFieldNumber = 1;
    private uint slogId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint SlogId {
      get { return slogId_; }
      set {
        slogId_ = value;
      }
    }

    /// <summary>Field number for the "disptime" field.</summary>
    public const int DisptimeFieldNumber = 2;
    private uint disptime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Disptime {
      get { return disptime_; }
      set {
        disptime_ = value;
      }
    }

    /// <summary>Field number for the "mac_addr" field.</summary>
    public const int MacAddrFieldNumber = 3;
    private string macAddr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MacAddr {
      get { return macAddr_; }
      set {
        macAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ad_id" field.</summary>
    public const int AdIdFieldNumber = 4;
    private ulong adId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AdId {
      get { return adId_; }
      set {
        adId_ = value;
      }
    }

    /// <summary>Field number for the "picture" field.</summary>
    public const int PictureFieldNumber = 5;
    private pb::ByteString picture_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Picture {
      get { return picture_; }
      set {
        picture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OrcaShowLog);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OrcaShowLog other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SlogId != other.SlogId) return false;
      if (Disptime != other.Disptime) return false;
      if (MacAddr != other.MacAddr) return false;
      if (AdId != other.AdId) return false;
      if (Picture != other.Picture) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SlogId != 0) hash ^= SlogId.GetHashCode();
      if (Disptime != 0) hash ^= Disptime.GetHashCode();
      if (MacAddr.Length != 0) hash ^= MacAddr.GetHashCode();
      if (AdId != 0UL) hash ^= AdId.GetHashCode();
      if (Picture.Length != 0) hash ^= Picture.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SlogId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(SlogId);
      }
      if (Disptime != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Disptime);
      }
      if (MacAddr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MacAddr);
      }
      if (AdId != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(AdId);
      }
      if (Picture.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(Picture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SlogId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(SlogId);
      }
      if (Disptime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Disptime);
      }
      if (MacAddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MacAddr);
      }
      if (AdId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AdId);
      }
      if (Picture.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Picture);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OrcaShowLog other) {
      if (other == null) {
        return;
      }
      if (other.SlogId != 0) {
        SlogId = other.SlogId;
      }
      if (other.Disptime != 0) {
        Disptime = other.Disptime;
      }
      if (other.MacAddr.Length != 0) {
        MacAddr = other.MacAddr;
      }
      if (other.AdId != 0UL) {
        AdId = other.AdId;
      }
      if (other.Picture.Length != 0) {
        Picture = other.Picture;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SlogId = input.ReadUInt32();
            break;
          }
          case 16: {
            Disptime = input.ReadUInt32();
            break;
          }
          case 26: {
            MacAddr = input.ReadString();
            break;
          }
          case 32: {
            AdId = input.ReadUInt64();
            break;
          }
          case 42: {
            Picture = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Client向Server发送请求的格式
  /// </summary>
  public sealed partial class QueryAdvRequest : pb::IMessage<QueryAdvRequest> {
    private static readonly pb::MessageParser<QueryAdvRequest> _parser = new pb::MessageParser<QueryAdvRequest>(() => new QueryAdvRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryAdvRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Xiaoman.OrcaReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAdvRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAdvRequest(QueryAdvRequest other) : this() {
      type_ = other.type_;
      macAddr_ = other.macAddr_;
      resolution_ = other.resolution_;
      creationTime_ = other.creationTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAdvRequest Clone() {
      return new QueryAdvRequest(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Com.Xiaoman.QueryAdvRequest.Types.QueryType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Xiaoman.QueryAdvRequest.Types.QueryType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "mac_addr" field.</summary>
    public const int MacAddrFieldNumber = 2;
    private string macAddr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MacAddr {
      get { return macAddr_; }
      set {
        macAddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resolution" field.</summary>
    public const int ResolutionFieldNumber = 3;
    private global::Com.Xiaoman.QueryAdvRequest.Types.Resolution resolution_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Xiaoman.QueryAdvRequest.Types.Resolution Resolution {
      get { return resolution_; }
      set {
        resolution_ = value;
      }
    }

    /// <summary>Field number for the "creation_time" field.</summary>
    public const int CreationTimeFieldNumber = 4;
    private uint creationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CreationTime {
      get { return creationTime_; }
      set {
        creationTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryAdvRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryAdvRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (MacAddr != other.MacAddr) return false;
      if (Resolution != other.Resolution) return false;
      if (CreationTime != other.CreationTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (MacAddr.Length != 0) hash ^= MacAddr.GetHashCode();
      if (Resolution != 0) hash ^= Resolution.GetHashCode();
      if (CreationTime != 0) hash ^= CreationTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (MacAddr.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MacAddr);
      }
      if (Resolution != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Resolution);
      }
      if (CreationTime != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(CreationTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (MacAddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MacAddr);
      }
      if (Resolution != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Resolution);
      }
      if (CreationTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CreationTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryAdvRequest other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.MacAddr.Length != 0) {
        MacAddr = other.MacAddr;
      }
      if (other.Resolution != 0) {
        Resolution = other.Resolution;
      }
      if (other.CreationTime != 0) {
        CreationTime = other.CreationTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Com.Xiaoman.QueryAdvRequest.Types.QueryType) input.ReadEnum();
            break;
          }
          case 18: {
            MacAddr = input.ReadString();
            break;
          }
          case 24: {
            resolution_ = (global::Com.Xiaoman.QueryAdvRequest.Types.Resolution) input.ReadEnum();
            break;
          }
          case 32: {
            CreationTime = input.ReadUInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the QueryAdvRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum QueryType {
        [pbr::OriginalName("QUERY_TYPE_SIMPLE")] Simple = 0,
        [pbr::OriginalName("QUERY_TYPE_COMPLEX")] Complex = 1,
      }

      public enum Resolution {
        [pbr::OriginalName("RES_4_TO_3")] Res4To3 = 0,
        [pbr::OriginalName("RES_16_TO_9")] Res16To9 = 1,
      }

    }
    #endregion

  }

  public sealed partial class UpdateAdvRequest : pb::IMessage<UpdateAdvRequest> {
    private static readonly pb::MessageParser<UpdateAdvRequest> _parser = new pb::MessageParser<UpdateAdvRequest>(() => new UpdateAdvRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateAdvRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Xiaoman.OrcaReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAdvRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAdvRequest(UpdateAdvRequest other) : this() {
      type_ = other.type_;
      adv_ = other.adv_ != null ? other.adv_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAdvRequest Clone() {
      return new UpdateAdvRequest(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Com.Xiaoman.UpdateAdvRequest.Types.UpdateType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Xiaoman.UpdateAdvRequest.Types.UpdateType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "adv" field.</summary>
    public const int AdvFieldNumber = 2;
    private global::Com.Xiaoman.OrcaAdv adv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Xiaoman.OrcaAdv Adv {
      get { return adv_; }
      set {
        adv_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateAdvRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateAdvRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Adv, other.Adv)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (adv_ != null) hash ^= Adv.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (adv_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Adv);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (adv_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Adv);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateAdvRequest other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.adv_ != null) {
        if (adv_ == null) {
          adv_ = new global::Com.Xiaoman.OrcaAdv();
        }
        Adv.MergeFrom(other.Adv);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Com.Xiaoman.UpdateAdvRequest.Types.UpdateType) input.ReadEnum();
            break;
          }
          case 18: {
            if (adv_ == null) {
              adv_ = new global::Com.Xiaoman.OrcaAdv();
            }
            input.ReadMessage(adv_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UpdateAdvRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum UpdateType {
        [pbr::OriginalName("UPDATE_TYPE_CREATE")] Create = 0,
        [pbr::OriginalName("UPDATE_TYPE_UPDATE")] Update = 1,
        [pbr::OriginalName("UPDATE_TYPE_DELETE")] Delete = 2,
      }

    }
    #endregion

  }

  public sealed partial class InsertLogRequest : pb::IMessage<InsertLogRequest> {
    private static readonly pb::MessageParser<InsertLogRequest> _parser = new pb::MessageParser<InsertLogRequest>(() => new InsertLogRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertLogRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Xiaoman.OrcaReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertLogRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertLogRequest(InsertLogRequest other) : this() {
      printLog_ = other.printLog_ != null ? other.printLog_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertLogRequest Clone() {
      return new InsertLogRequest(this);
    }

    /// <summary>Field number for the "print_log" field.</summary>
    public const int PrintLogFieldNumber = 1;
    private global::Com.Xiaoman.OrcaPrintLog printLog_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Xiaoman.OrcaPrintLog PrintLog {
      get { return printLog_; }
      set {
        printLog_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertLogRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertLogRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PrintLog, other.PrintLog)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (printLog_ != null) hash ^= PrintLog.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (printLog_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PrintLog);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (printLog_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrintLog);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertLogRequest other) {
      if (other == null) {
        return;
      }
      if (other.printLog_ != null) {
        if (printLog_ == null) {
          printLog_ = new global::Com.Xiaoman.OrcaPrintLog();
        }
        PrintLog.MergeFrom(other.PrintLog);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (printLog_ == null) {
              printLog_ = new global::Com.Xiaoman.OrcaPrintLog();
            }
            input.ReadMessage(printLog_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertScreenhotRequest : pb::IMessage<InsertScreenhotRequest> {
    private static readonly pb::MessageParser<InsertScreenhotRequest> _parser = new pb::MessageParser<InsertScreenhotRequest>(() => new InsertScreenhotRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertScreenhotRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Xiaoman.OrcaReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertScreenhotRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertScreenhotRequest(InsertScreenhotRequest other) : this() {
      showLog_ = other.showLog_ != null ? other.showLog_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertScreenhotRequest Clone() {
      return new InsertScreenhotRequest(this);
    }

    /// <summary>Field number for the "show_log" field.</summary>
    public const int ShowLogFieldNumber = 1;
    private global::Com.Xiaoman.OrcaShowLog showLog_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Xiaoman.OrcaShowLog ShowLog {
      get { return showLog_; }
      set {
        showLog_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertScreenhotRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertScreenhotRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ShowLog, other.ShowLog)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (showLog_ != null) hash ^= ShowLog.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (showLog_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ShowLog);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (showLog_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ShowLog);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertScreenhotRequest other) {
      if (other == null) {
        return;
      }
      if (other.showLog_ != null) {
        if (showLog_ == null) {
          showLog_ = new global::Com.Xiaoman.OrcaShowLog();
        }
        ShowLog.MergeFrom(other.ShowLog);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (showLog_ == null) {
              showLog_ = new global::Com.Xiaoman.OrcaShowLog();
            }
            input.ReadMessage(showLog_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Server向Client回传响应的请求格式
  /// </summary>
  public sealed partial class QueryAdvResponse : pb::IMessage<QueryAdvResponse> {
    private static readonly pb::MessageParser<QueryAdvResponse> _parser = new pb::MessageParser<QueryAdvResponse>(() => new QueryAdvResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryAdvResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Xiaoman.OrcaReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAdvResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAdvResponse(QueryAdvResponse other) : this() {
      adv_ = other.adv_ != null ? other.adv_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAdvResponse Clone() {
      return new QueryAdvResponse(this);
    }

    /// <summary>Field number for the "adv" field.</summary>
    public const int AdvFieldNumber = 1;
    private global::Com.Xiaoman.OrcaAdv adv_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Xiaoman.OrcaAdv Adv {
      get { return adv_; }
      set {
        adv_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryAdvResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryAdvResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Adv, other.Adv)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (adv_ != null) hash ^= Adv.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (adv_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Adv);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (adv_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Adv);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryAdvResponse other) {
      if (other == null) {
        return;
      }
      if (other.adv_ != null) {
        if (adv_ == null) {
          adv_ = new global::Com.Xiaoman.OrcaAdv();
        }
        Adv.MergeFrom(other.Adv);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (adv_ == null) {
              adv_ = new global::Com.Xiaoman.OrcaAdv();
            }
            input.ReadMessage(adv_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateAdvResponse : pb::IMessage<UpdateAdvResponse> {
    private static readonly pb::MessageParser<UpdateAdvResponse> _parser = new pb::MessageParser<UpdateAdvResponse>(() => new UpdateAdvResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateAdvResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Xiaoman.OrcaReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAdvResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAdvResponse(UpdateAdvResponse other) : this() {
      updateSucc_ = other.updateSucc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAdvResponse Clone() {
      return new UpdateAdvResponse(this);
    }

    /// <summary>Field number for the "update_succ" field.</summary>
    public const int UpdateSuccFieldNumber = 1;
    private bool updateSucc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UpdateSucc {
      get { return updateSucc_; }
      set {
        updateSucc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateAdvResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateAdvResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UpdateSucc != other.UpdateSucc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UpdateSucc != false) hash ^= UpdateSucc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UpdateSucc != false) {
        output.WriteRawTag(8);
        output.WriteBool(UpdateSucc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UpdateSucc != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateAdvResponse other) {
      if (other == null) {
        return;
      }
      if (other.UpdateSucc != false) {
        UpdateSucc = other.UpdateSucc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UpdateSucc = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertLogResponse : pb::IMessage<InsertLogResponse> {
    private static readonly pb::MessageParser<InsertLogResponse> _parser = new pb::MessageParser<InsertLogResponse>(() => new InsertLogResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertLogResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Xiaoman.OrcaReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertLogResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertLogResponse(InsertLogResponse other) : this() {
      insertSucc_ = other.insertSucc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertLogResponse Clone() {
      return new InsertLogResponse(this);
    }

    /// <summary>Field number for the "insert_succ" field.</summary>
    public const int InsertSuccFieldNumber = 1;
    private bool insertSucc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool InsertSucc {
      get { return insertSucc_; }
      set {
        insertSucc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertLogResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertLogResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InsertSucc != other.InsertSucc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InsertSucc != false) hash ^= InsertSucc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InsertSucc != false) {
        output.WriteRawTag(8);
        output.WriteBool(InsertSucc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InsertSucc != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertLogResponse other) {
      if (other == null) {
        return;
      }
      if (other.InsertSucc != false) {
        InsertSucc = other.InsertSucc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InsertSucc = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertScreenshotResponse : pb::IMessage<InsertScreenshotResponse> {
    private static readonly pb::MessageParser<InsertScreenshotResponse> _parser = new pb::MessageParser<InsertScreenshotResponse>(() => new InsertScreenshotResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertScreenshotResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Xiaoman.OrcaReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertScreenshotResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertScreenshotResponse(InsertScreenshotResponse other) : this() {
      insertSucc_ = other.insertSucc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertScreenshotResponse Clone() {
      return new InsertScreenshotResponse(this);
    }

    /// <summary>Field number for the "insert_succ" field.</summary>
    public const int InsertSuccFieldNumber = 1;
    private bool insertSucc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool InsertSucc {
      get { return insertSucc_; }
      set {
        insertSucc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertScreenshotResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertScreenshotResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InsertSucc != other.InsertSucc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InsertSucc != false) hash ^= InsertSucc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InsertSucc != false) {
        output.WriteRawTag(8);
        output.WriteBool(InsertSucc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InsertSucc != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertScreenshotResponse other) {
      if (other == null) {
        return;
      }
      if (other.InsertSucc != false) {
        InsertSucc = other.InsertSucc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            InsertSucc = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
